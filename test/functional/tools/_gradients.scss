// =============================================================================
// TEST / FUNCTIONAL / TOOLS / GRADIENTS
// =============================================================================

// Functions
// ===========================================

// $gradient-color()
// ------------------------------------

@include test-module("@function gradient-color") {
  @include test("should return a start hex value for given key.") {
    $actual: gradient-color("sky-1", 0%);
    $expected: #0082dc;

    @include assert-equal($actual, $expected);
  }

  @include test("should return an end hex value for given key.") {
    $actual: gradient-color("sky-1", 100%);
    $expected: #1ea0f5;

    @include assert-equal($actual, $expected);
  }

  @include test("should return an end hex if no variant is provided.") {
    $actual: gradient-color("sky-1");
    $expected: #1ea0f5;

    @include assert-equal($actual, $expected);
  }
}

// $gradient-color-stops()
// ------------------------------------

@include test-module("@function gradient-color-stops") {
  @include test("should return correct color points with given key") {
    $actual: gradient-color-stops(sky-1);
    $expected: null, #0082dc 0%, #1ea0f5 100%; // Unknown bug in tests prepending `null`

    @include assert-equal($actual, $expected);
  }

  @include test("should return correct color points with given key when inverted") {
    $actual: gradient-color-stops(sky-1, reverse);
    $expected: null, #1ea0f5 0%, #0082dc 100%; // Unknown bug in tests prepending `null`

    @include assert-equal($actual, $expected);
  }
}

// Mixins
// ===========================================

@include test-module("@mixin gradient-background") {
  @include test("should return a vertical linear gradient for the given key when no direction is set") {
    @include assert("compiles vertical linear gradient") {
      @include input() {
        @include gradient-background(sky-1);
      }

      @include expect() {
        background-color: #1ea0f5;
        background-image: -webkit-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -moz-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -o-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: linear-gradient(to bottom, #0082dc 0%, #1ea0f5 100%);
      }
    }
  }

  @include test("should return a vertical linear gradient for the given key when a vertical direction is set") {
    @include assert("compiles vertical linear gradient") {
      @include input() {
        @include gradient-background(sky-1, "vertical");
      }

      @include expect() {
        background-color: #1ea0f5;
        background-image: -webkit-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -moz-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -o-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: linear-gradient(to bottom, #0082dc 0%, #1ea0f5 100%);
      }
    }
  }

  @include test("should return a radial gradient for the given key when a radial direction is set") {
    @include assert("compiles radial linear gradient") {
      @include input() {
        @include gradient-background(sky-1, "radial");
      }

      @include expect() {
        background-color: #1ea0f5;
        background-image: -webkit-radial-gradient(center, ellipse cover, #1ea0f5 0%, #0082dc 100%);
        background-image: -moz-radial-gradient(center, ellipse cover, #1ea0f5 0%, #0082dc 100%);
        background-image: -o-radial-gradient(center, ellipse cover, #1ea0f5 0%, #0082dc 100%);
        background-image: radial-gradient(ellipse at center, #1ea0f5 0%, #0082dc 100%);
      }
    }
  }

  @include test("should return the correct fallback color if set") {
    @include assert("compiles vertical linear gradient") {
      @include input() {
        @include gradient-background(sky-1, "vertical", color(grey-50));
      }

      @include expect() {
        background-color: #222;
        background-image: -webkit-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -moz-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: -o-linear-gradient(top, #0082dc 0%, #1ea0f5 100%);
        background-image: linear-gradient(to bottom, #0082dc 0%, #1ea0f5 100%);
      }
    }
  }
}

// Add Gradient Text to element
// ===========================================

@include test-module("@mixin gradient-text") {
  @include test("with key and direction") {
    @include assert("sets correct values") {
      @include input() {
        @include gradient-text(sky-1, horizontal);
      }

      @include expect() {
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        -webkit-transform: translate3d(0, 0, 0);
        display: inline-block;
        color: #1ea0f5;
        background-image: -webkit-linear-gradient(left, #0082dc 0%, #1ea0f5 100%);
        background-size: 100%;
      }
    }
  }

  @include test("with key, direction and fallback") {
    @include assert("sets correct values") {
      @include input() {
        @include gradient-text(sky-1, radial, color(brand));
      }

      @include expect() {
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        -webkit-transform: translate3d(0, 0, 0);
        display: inline-block;
        color: #0072c9;
        background-image: -webkit-radial-gradient(center, ellipse cover, #1ea0f5 0%, #0082dc 100%);
        background-size: 100%;
      }
    }
  }
}
