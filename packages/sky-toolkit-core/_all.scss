/* ==========================================================================
   TOOLKIT-CORE
   ========================================================================== */

/**
 * CONTENTS
 *
 * SETTINGS
 * All..................Because our Settings layer doesn’t actually produce any
 *                      CSS, we can safely glob all of the files into one import
 *                      without risk of bloating our compiled stylesheet.
 *                      This also allows us to easily recycle all of our
 *                      project-level settings into other Sass file/projects.
 *                      e.g. `@import "sky-toolkit-core/tools";`
 *                      Please see `settings/_all.scss` for a full table of
 *                      contents.
 *
 * TOOLS
 * All..................Because our Tools layer doesn’t actually produce any
 *                      CSS, we can safely glob all of the files into one import
 *                      without risk of bloating our compiled stylesheet.
 *                      This also allows us to easily recycle all of our
 *                      project-level settings into other Sass file/projects.
 *                      e.g. `@import "sky-toolkit-core/tools";`
 *                      Please see `tools/_all.scss` for a full table of
 *                      contents.
 *
 * GENERIC
 * Font-face............Our @font-face definitions for custom fonts.
 * Box-sizing...........Better default box-model.
 * Normalize.css........Normalise differences across different browsers.
 * Reset................Simple reset to complement Normalize.css: set everything
 *                      to zero.
 * Overflow.............Prevent horizontal scrolling by default.
 * Vertical Rhythm......Define common vertical spacing across all block-level
 *                      elements in one go.
 * Keyframes............Our @keyframe definitions for animations.
 *
 * ELEMENTS
 * Page.................Set up our HTML and/or BODY elements.
 * Typography...........Simple typographical elements (e.g. H1–H6).
 * Forms................Very, very basic (reset-like) form element styles.
 * Links................Default styles for simple hyperlinks.
 * Tables...............Baseline styling to TABLE elements.
 * Images...............Sensible defaults for IMG elements.
 *
 * OBJECTS
 * Supercell............Third-party grid/layout system.
 * Container............Page-level wrappers and containers.
 * Layout...............Grid-like layout mechanism for arranging components.
 *                      Complemented by our width utility classes in order to
 *                      create fluid and responsive page layouts.
 * Flag.................Places any image-like content next to any text-like
 *                      content, with flexibility on vertical alignment.
 * Media Object.........Abstraction for placing image- and text-like content
 *                      side by side.
 * Tables...............Slightly more opinionated and structural styles for
 *                      TABLE elements.
 * List-bare............Strip obvious list styling (bullet points, indents) from
 *                      list elements.
 * List-block...........Remove list-like styling and force list items to be
 *                      blocks or stacked content.
 * List-inline..........Force a list of items to all sit side-by-side.
 *
 * UTILITIES
 * Breakout.............Utility class to breakout of a parent element's
                        `max-width`.
 * Clearfix.............Utility class for applying a clearfix to an element.
 * Hide.................Helper classes for hiding content in different ways.
 * Typography...........A suite of helper classes for manipulating typographical
 *                      elements (alignment, size, etc.).
 * Spacing..............A suite of helper classes for consistent margins and
 *                      paddings.
 * Widths...............A rather complex file which will generate a series of
 *                      utilities for (responsively) setting the width of an
 *                      element. Creates classes like `.u-1/2` (make something
 *                      50% width) or `.u-2/3@large` (make something 66.666%
 *                      width but only on large screens). Most commonly used in
 *                      conjunction with our layout system.
 * Vertical-Align.......A helper utility allowing an element to be vertically
                        aligned within its parent container.
 * ie9..................Various fixes to bugs in IE9.
 * Debug................Enabling debugging mode will point out various errors
 *                      and mistakes in our HTML.
 * Fill.................Utility classes to position an element within its parent.
 * Overflow.............Utility classes to control element overflow.
 */

// Settings
@import "settings/all";

// Tools
@import "tools/all";

// Generic
@import "generic/font-face";
@import "generic/box-sizing";
@import "normalize.css/normalize";
@import "generic/reset";
@import "generic/overflow";
@import "generic/vertical-rhythm";
@import "generic/keyframes";

// Elements
@import "elements/page";
@import "elements/typography";
@import "elements/forms";
@import "elements/links";
@import "elements/tables";
@import "elements/images";

// Objects
@import "supercell/objects.layout";
@import "objects/container";
@import "objects/flag";
@import "objects/media";
@import "objects/tables";
@import "objects/list-bare";
@import "objects/list-block";
@import "objects/list-inline";

// Utilities
@import "utilities/breakout";
@import "utilities/clearfix";
@import "utilities/hide";
@import "utilities/typography";
@import "utilities/spacing";
@import "utilities/widths";
@import "utilities/vertical-align";
@import "utilities/ie9";
@import "utilities/debug";
@import "utilities/fill";
@import "utilities/overflow";

// Assertions
@import "test/assertions/all";
